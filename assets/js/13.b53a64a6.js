(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{284:function(t,e,n){"use strict";n.r(e);var s=n(14),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[e("em",[t._v("Nginx")]),t._v(" (engine x) 是一个高性能的"),e("strong",[t._v("HTTP")]),t._v("和"),e("strong",[t._v("反向代理")]),t._v("的"),e("strong",[t._v("web服务器")]),t._v("。")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("反向代理")]),t._v(" "),e("li",[t._v("负载均衡")]),t._v(" "),e("li",[t._v("动静分离")])]),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),e("ul",[e("li",[t._v("高并发且稳定")]),t._v(" "),e("li",[t._v("轻量级，内存消耗低")]),t._v(" "),e("li",[t._v("热部署")])]),t._v(" "),e("h2",{attrs:{id:"反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("正向代理：当客户端无法访问外部资源的时候（由于诸如"),e("strong",[t._v("墙")]),t._v("这样的原因），可以通过一个正向代理去间接地访问，所以"),e("strong",[t._v("客户端需要配置代理服务器的ip")]),t._v("。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/coderPjx/images/raw/master/images/Snipaste_2021-04-01_17-06-10.jpg",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("反向代理：客户端是"),e("strong",[t._v("无感知")]),t._v("代理的存在，以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端。")]),t._v(" "),e("p",[t._v("作用：")]),t._v(" "),e("ul",[e("li",[t._v("隐藏真实服务地IP地址，暴露代理服务器地址，保证内网的安全")]),t._v(" "),e("li",[t._v("负载均衡")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/coderPjx/images/raw/master/images/Snipaste_2021-04-01_17-06-21.jpg",alt:""}})])])]),t._v(" "),e("h2",{attrs:{id:"负载均衡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),e("p",[t._v("在服务器集群中，Nginx起到一个代理服务器的角色（即反向代理），为了避免单独一个服务器压力过大，将来自用户的请求"),e("strong",[t._v("转发")]),t._v("给空闲的服务器。")]),t._v(" "),e("h2",{attrs:{id:"动静分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[t._v("#")]),t._v(" 动静分离")]),t._v(" "),e("p",[t._v("为了加快网站的解析速度，可以把动态资源和静态资源分给不同的服务器来解析，降低单个服务器的压力。")]),t._v(" "),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("启动   "),e("code",[t._v("./nginx")])])]),t._v(" "),e("li",[e("p",[t._v("关闭   "),e("code",[t._v("./nginx -s stop")])])]),t._v(" "),e("li",[e("p",[t._v("重载   "),e("code",[t._v("./nginx -s reload")])])]),t._v(" "),e("li",[e("p",[t._v("验证配置文件  "),e("code",[t._v("./nginx -t")])])])]),t._v(" "),e("h2",{attrs:{id:"配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),e("p",[t._v("配置文件为conf目录下的nginx.conf")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#-------全局块-----------\nworker_processes  1;\n\n#------events块----------\nevents {\n    worker_connections  1024;\n}\n\n#---------http块-----------\nhttp {\n    #---------http全局块---------\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n\t#--------sever块----------\n    server {\n        #--------sever全局块----------\n        listen       80;\n        server_name  localhost;\n        #--------location块----------\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n")])])]),e("p",[t._v("配置文件分为三大块：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("全局块")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("worker_processes  1;\n")])])]),e("p",[t._v("主要包括配置运行 Nginx 服务器的用户（组）、允许生成的 "),e("strong",[t._v("worker process 数")]),t._v("， 进程 PID 存放路径、日志存放路径和类型以\n及配置文件的引入等。"),e("strong",[t._v("worker_processes 值越大，可以支持的并发处理量也越多，但是会受到硬件、软件等设备的制约。")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("events块")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("events {\n    worker_connections  1024;\n}\n")])])]),e("p",[t._v("主要影响 Nginx 服务器与用户的"),e("strong",[t._v("网络连接")]),t._v("，常用的设置包括是否开启对多 work process 下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型来处理连接请求，每个 word process 可以同时支持的"),e("strong",[t._v("最大连接数")]),t._v("等。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("http块")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("http {\n    #-------http全局块---------\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n    #----------sever块--------\n    server {\n        #----serve全局块--------\n        listen       80;\n        server_name  localhost;\n        #--------location块--------\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n")])])]),e("p",[t._v("这是Nginx服务器配置最频繁的部分，包括"),e("strong",[t._v("代理、缓存和日志")]),t._v("定义等绝大多数功能和第三方模块的配置。")]),t._v(" "),e("p",[t._v("需要注意的是： "),e("strong",[t._v("http 块也可以包括 http 全局块、 server 块")]),t._v("。")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("http 全局块：")]),t._v("\nhttp 全局块配置的指令包括文件引入、 MIME-TYPE 定义、日志自定义、连接超时时间、单链接请求数上限等。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("server 块")]),t._v("\n这块和虚拟主机有密切关系，虚拟主机从用户角度看，和一台独立的硬件主机是完全一样的，该技术的产生是为了节省互联网服务器硬件成本。")]),t._v(" "),e("p",[e("strong",[t._v("每个 http 块可以包括多个 server 块")]),t._v("，而每个 server 块就相当于一个虚拟主机。而每个 server 块也分为全局 server 块，以及可以同时包含多个 locaton 块。")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("全局 server 块")]),t._v("\n最常见的配置是本虚拟机主机的监听配置和本虚拟主机的名称或 IP 配置。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("location 块")])]),t._v(" "),e("p",[t._v("一个 server 块可以配置多个 location 块。这块的主要作用是基于 Nginx 服务器接收到的请求字符串（例如server_name/uri-string），对虚拟主机名称（也可以是 IP 别名）之外的字符串（例如 前面的 /uri-string）进行匹配，对特定的请求进行处理。地址定向、数据缓存和应答控制等功能，还有许多第三方模块的配置也在这里进行。")])])])])]),t._v(" "),e("h2",{attrs:{id:"负载均衡配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡配置"}},[t._v("#")]),t._v(" 负载均衡配置")]),t._v(" "),e("p",[t._v("前提："),e("strong",[t._v("开放转发地址端口")])]),t._v(" "),e("p",[t._v("目标：当访问www.123.com，访问的是http://127.0.0.1:8080")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("在系统host文件中进行域名和ip地址映射关系的配置。")]),t._v(" "),e("p",[t._v("如 192.168.xx.xx  www.123.com")])]),t._v(" "),e("li",[e("p",[t._v("修改nginx.conf文件，将serve_name修改为本机ip地址，在location中添加转发目标地址。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n        #----serve全局块--------\n        listen       80;\n        server_name  192.168.xx.xx;\n        #--------location块--------\n        location / {\n            root   html;\n            #------转发目标地址---------\n            proxy_pass:http://127.0.0.1:8080;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n")])])]),e("p",[t._v("当有多个反向代理规则就配置多个server块。")]),t._v(" "),e("p",[t._v("当访问同一个ip地址的不同子路径需要反向代理到不同的端口，则配置多个location块。只需要修改locatio的路径。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n        #----serve全局块--------\n        listen       80;\n        server_name  192.168.xx.xx;\n        #--------location块--------\n        location /aaa {\n            #------转发目标地址---------\n            proxy_pass:http://127.0.0.1:8080;\n        }\n        location /bbb {\n            #------转发目标地址---------\n            proxy_pass:http://127.0.0.1:8081;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n")])])]),e("p",[t._v("当访问同一个地址时，平均地分发到服务器集群。")]),t._v(" "),e("ol",[e("li",[t._v("在nginx.conf文件中的http块添加"),e("code",[t._v("upstream 自定义服务器名称")]),t._v("块")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("http {\n ...\n upstream myserver {\n   server 192.168.xx.xx：8081;\n   server 192.168.xx.xx：8081;\n }\n ...\n}\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("修改server块中的server_name为ip地址")]),t._v(" "),e("p",[t._v("server_name  192.168.xx.xx;")])]),t._v(" "),e("li",[e("p",[t._v("location块添加")]),t._v(" "),e("p",[t._v("proxy_pass http://myserver（自定义的服务器名称）")])])]),t._v(" "),e("p",[t._v("负载均衡策略：")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("轮询（默认）")])]),t._v(" "),e("p",[t._v("每个请求按时间顺序逐一分配到不同后端服务器。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("weight权重")])]),t._v(" "),e("p",[t._v("权重默认为1，权重越高，分配请求越多。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" upstream myserver {\n   server 192.168.xx.xx：8081 weight=5;\n   server 192.168.xx.xx：8081 weight=10;\n }\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("ip_hash")])]),t._v(" "),e("p",[t._v("每个请求按访问ip的hash值分配，这样每个访客固定访问一个服务器，可以"),e("strong",[t._v("解决session共享问题")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" upstream myserver {\n   ip_hash;\n   server 192.168.xx.xx：8081;\n   server 192.168.xx.xx：8081;\n }\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("fair")])]),t._v(" "),e("p",[t._v("按后端服务器响应时间来分配请求，响应时间短的优先分配。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" upstream myserver {\n   server 192.168.xx.xx：8081;\n   server 192.168.xx.xx：8081;\n   fair;\n }\n")])])])])])])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);